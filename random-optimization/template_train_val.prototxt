name: "TwoEarsNet"
layer {
  name: "data"
  type: "HDF5Data"
  top: "label"
  top: "label_scalar"
  top: "azimuth_bin"
  top: "azimuth_bin_idx"
  top: "amsFeatures"
  include {
    phase: TRAIN
  }
  hdf5_data_param {
    source: "/mnt/raid/data/ni/twoears/kashefy/localization/clean_multiAzimuth/gen20160705/concat_sampled_bal_split_200/twoears_data_train.txt"
    batch_size: 128
  }
}
layer {
  name: "data"
  type: "HDF5Data"
  top: "label"
  top: "label_scalar"
  top: "azimuth_bin"
  top: "azimuth_bin_idx"
  top: "amsFeatures"
  include {
    phase: TEST
  }
  hdf5_data_param {
    source: "/mnt/raid/data/ni/twoears/kashefy/localization/clean_multiAzimuth/gen20160705/concat_sampled_bal_split_200/twoears_data_test.txt"
    batch_size: 128
  }
}
layer {
  name: "silence_data"
  type: "Silence"
  bottom: "label" # "label_scalar"
  bottom: "azimuth_bin" # "azimuth_bin_idx"
}
############################
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "amsFeatures"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: OPTIMIZE{"type": "ENUM", "options": ["60", "80", "100"]}
    kernel_h: OPTIMIZE{"type": "INT", "min": 3, "max": 10}
    kernel_w: OPTIMIZE{"type": "INT", "min": 3, "max": 60}
    stride: OPTIMIZE{"type": "INT", "min": 1, "max": 2}
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "drop1"
  type: "Dropout"
  bottom: "conv1"
  top: "conv1"
  dropout_param {
    dropout_ratio: 0.5
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_h: OPTIMIZE{"type": "INT", "min": 1, "max": 4}
    kernel_w: OPTIMIZE{"type": "INT", "min": 1, "max": 4}
    stride_h: OPTIMIZE{"type": "INT", "min": 1, "max": 2}
    stride_w: OPTIMIZE{"type": "INT", "min": 1, "max": 2}
  }
}
############################
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: OPTIMIZE{"type": "ENUM", "options": ["100", "200", "2000"]}
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "reluip1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "dropip1"
  type: "Dropout"
  bottom: "ip1"
  top: "ip1"
  dropout_param {
    dropout_ratio: 0.5
  }
  include {
    phase: TRAIN
  }
}
############################
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: OPTIMIZE{"type": "ENUM", "options": ["100", "200", "2000"]}
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "reluip2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "dropip2"
  type: "Dropout"
  bottom: "ip2"
  top: "ip2"
  dropout_param {
    dropout_ratio: 0.5
  }
  include {
    phase: TRAIN
  }
}
############################
layer {
  name: "ip_classification"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip_classification"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 12
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "ip_localization"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip_localization"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 72
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
############################
layer {
  name: "prob_classification"
  type: "Sigmoid"
  bottom: "ip_classification"
  top: "prob_classification"
}
layer {
  name: "prob_localization"
  type: "Sigmoid"
  bottom: "ip_localization"
  top: "prob_localization"
}
layer {
  name: "silence_prob"
  type: "Silence"
  bottom: "prob_classification"
  bottom: "prob_localization"
}
############################
layer {
  name: "loss_classification"
  type: "SoftmaxWithLoss" # "SigmoidCrossEntropyLoss"
  bottom: "ip_classification"
  bottom: "label_scalar" # "label"
  top: "loss_classification"
  loss_weight: 1
}
layer {
  name: "loss_localization"
  type: "SoftmaxWithLoss" # "SigmoidCrossEntropyLoss"
  bottom: "ip_localization"
  bottom: "azimuth_bin_idx" # "azimuth_bin"
  top: "loss_localization"
  loss_weight: 0
}
layer {
  name: "accuracy_classification"
  type: "Accuracy"
  bottom: "ip_classification"
  bottom: "label_scalar"
  top: "accuracy_classification"
  include {
    phase: TEST
  }
}
layer {
  name: "accuracy_localization"
  type: "Accuracy"
  bottom: "ip_localization"
  bottom: "azimuth_bin_idx"
  top: "accuracy_localization"
  include {
    phase: TEST
  }
}
